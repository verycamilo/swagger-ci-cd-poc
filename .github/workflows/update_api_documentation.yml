name: Update Documentation

on:
  workflow_call:
    secrets:
      token:
        required: true
    inputs:
      documentation_path:
        type: string
        required: true
      documentation_repository:
        type: string
        required: false
        default: https://api.github.com/repos/verycamilo/swagger-ci-cd-poc
      stage_pattern_map:
        type: string
        required: false
        default: '{"prod":"^main$", "stage":"^release/*-beta$"}'

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      stage: ${{ steps.set-stage.outputs.stage }}
    steps:
      - id: set-stage
        run: |
          if [[ ${{ github.event.workflow_run.head_branch }} =~ ${{ fromJSON(inputs.stage_pattern_map).prod }} ]]
          then
              echo "::set-output name=stage::prod"
              echo "Matches prod"
          elif [[ ${{ github.event.workflow_run.head_branch }} =~ ${{ fromJSON(inputs.stage_pattern_map).stage }} ]]
          then
              echo "::set-output name=stage::stage"
              echo "Matches stage"
          else
            echo "::set-output name=stage::${{ github.event.workflow_run.head_branch }}"
            echo "No matches, going to use stage: ${{ github.event.workflow_run.head_branch }}"
          fi
  update-documentation:
    needs: setup
    name: Send Request to Process Documentation
    runs-on: ubuntu-latest
    if: contains(fromJSON('["develop", "stage", "preprod", "prod"]'), needs.setup.outputs.stage )
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Send API Request
        run: |
          export BASE64_APIDOC=$(cat ${{ github.workspace }}/${{ inputs.documentation_path }}  | base64)
          export TITLE=$(cat ${{ inputs.documentation_path }} | yq .info.title)
          export DESCRIPTION=$(cat ${{ inputs.documentation_path }} | yq .info.description)
          export VERSION=$(cat ${{ inputs.documentation_path }} | yq .info.version)
          export PAYLOAD_TEMPLATE='{ "event_type":"process_openapi","client_payload":{ "service": "${{ github.event.repository.full_name }}", "version": "VERSION", "doc": "BASE64_APIDOC", "title":"TITLE", "stage": "${{ needs.setup.outputs.stage }}", "description": "DESCRIPTION" } }'
          echo $PAYLOAD_TEMPLATE | jq --arg BASE64_APIDOC "${BASE64_APIDOC}" --arg TITLE "${TITLE}" --arg VERSION "${VERSION}" --arg DESCRIPTION "${DESCRIPTION}" '.client_payload.doc = $BASE64_APIDOC | .client_payload.title = $TITLE | .client_payload.version=$VERSION | .client_payload.description=$DESCRIPTION ' > payload.json
          curl -v  \
          --fail \
          -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.token }}" \
          --url ${{ inputs.documentation_repository }}/dispatches \
          -d @payload.json